import { Injectable } from '@angular/core';import { Http, RequestOptions, Headers } from '@angular/http';import { RegistrationRequest } from "../model/RegistrationRequest";import 'rxjs/add/operator/toPromise';
import { Observable } from "rxjs"
import { IRegistrationPage } from "../model/IRegistrationPage"

@Injectable()export class RegistrationService {    private headers: Headers;    private options: RequestOptions;    private currentPage: number = 1;    private registrationsPerPage: number = 10;    private totalRegistrations: number = 0;    constructor(private http: Http) {        this.headers = new Headers({ 'Content-Type': 'application/json' });        this.options = new RequestOptions({ headers: this.headers });    }

    public register(registration: RegistrationRequest): Observable<boolean> {        return this.http.post('http://localhost:22618/api/registration', JSON.stringify(registration), this.options)            .map(() => { return true; })            .catch(() => {
                return Observable.of(false);
            });    }    public getNextPage(): Observable<IRegistrationPage> {        if(this.canGoForward())            this.currentPage++;        return this.getCurrentPage();    }    public getPreviousPage(): Observable<IRegistrationPage> {        if(this.canGoBack())            this.currentPage--;        return this.getCurrentPage();    }    public canGoForward(): boolean {        var totalPages = Math.ceil(this.totalRegistrations / this.registrationsPerPage);        return this.currentPage < totalPages;    }    public canGoBack() : boolean {        return this.currentPage > 1;    }    public getCurrentPage(): Observable<IRegistrationPage> {        return this.http            .get('http://localhost:22618/api/registration/page/' +                this.currentPage.toString() +                '/amount/' +                this.registrationsPerPage.toString(),                this.options)            .map((response: any) => {                var page = JSON.parse(response._body) as IRegistrationPage;                this.totalRegistrations = page.totalCount;                return page;            });    }
}
